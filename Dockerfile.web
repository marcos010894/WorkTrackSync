# Dockerfile para o servidor web
FROM php:8.1-apache

# Instalar extensões PHP necessárias
RUN docker-php-ext-install mysqli pdo pdo_mysql

# Habilitar módulos Apache
RUN a2enmod rewrite ssl headers expires

# Copiar configuração do Apache
COPY apache-worktrack.conf /etc/apache2/sites-available/worktrack.conf
RUN a2dissite 000-default && a2ensite worktrack

# Criar diretórios necessários
RUN mkdir -p /var/www/html/worktrack/logs && \
    chown -R www-data:www-data /var/www/html/worktrack && \
    chmod -R 755 /var/www/html/worktrack

# Instalar utilitários
RUN apt-get update && apt-get install -y \
    vim \
    curl \
    cron \
    && rm -rf /var/lib/apt/lists/*

# Configurar timezone
ENV TZ=America/Sao_Paulo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Configurar PHP
COPY <<EOF /usr/local/etc/php/conf.d/worktrack.ini
upload_max_filesize = 10M
post_max_size = 10M
max_execution_time = 300
memory_limit = 256M
date.timezone = America/Sao_Paulo
log_errors = On
error_log = /var/log/php_errors.log
EOF

# Script de inicialização
COPY <<EOF /docker-entrypoint.sh
#!/bin/bash
set -e

# Aguardar MySQL estar pronto
until mysql -h"\$DB_HOST" -u"\$DB_USER" -p"\$DB_PASS" "\$DB_NAME" -e "SELECT 1" >/dev/null 2>&1; do
    echo "Aguardando MySQL..."
    sleep 2
done

echo "MySQL pronto!"

# Iniciar Apache
exec apache2-foreground
EOF

RUN chmod +x /docker-entrypoint.sh

EXPOSE 80 443

ENTRYPOINT ["/docker-entrypoint.sh"]
