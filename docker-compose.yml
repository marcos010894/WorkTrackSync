# WorkTrackSync - Docker Configuration
version: '3.8'

services:
  # Web Server (Apache + PHP)
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./web:/var/www/html/worktrack
      - ./logs:/var/www/html/worktrack/logs
      - ./ssl:/etc/ssl/worktrack
    environment:
      - DB_HOST=mysql
      - DB_NAME=worktrack_sync
      - DB_USER=worktrack
      - DB_PASS=worktrack123
    depends_on:
      - mysql
    networks:
      - worktrack-network
    restart: unless-stopped

  # MySQL Database
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: worktrack_sync
      MYSQL_USER: worktrack
      MYSQL_PASSWORD: worktrack123
    volumes:
      - mysql-data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - worktrack-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # phpMyAdmin (opcional, para administração)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: worktrack
      PMA_PASSWORD: worktrack123
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - worktrack-network
    restart: unless-stopped

  # Cron Job Service
  cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
    volumes:
      - ./web:/var/www/html/worktrack
    environment:
      - DB_HOST=mysql
      - DB_NAME=worktrack_sync
      - DB_USER=worktrack
      - DB_PASS=worktrack123
    depends_on:
      - mysql
    networks:
      - worktrack-network
    restart: unless-stopped

volumes:
  mysql-data:
    driver: local

networks:
  worktrack-network:
    driver: bridge
